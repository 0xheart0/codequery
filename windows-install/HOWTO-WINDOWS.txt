
This HOWTO guide applies to Windows only


HOW TO USE CODEQUERY WITH C/C++ CODE?


1. Change directory to the base folder of your source code like this:

cd c:\projects\myproject\src


2. Create a cscope.files file with all the C/C++ source
   files listed in it.

dir /b/a/s *.c    > cscope.files   
dir /b/a/s *.cpp >> cscope.files   
dir /b/a/s *.cxx >> cscope.files   
dir /b/a/s *.h   >> cscope.files   
dir /b/a/s *.hpp >> cscope.files   
dir /b/a/s *.hxx >> cscope.files   


3. Create a cscope database like this:

cscope -cbR


4. Create a ctags database like this.

ctags --fields=+i -n -R -L cscope.files


5. Run cqmakedb to create a CodeQuery database out of the
   cscope and ctags databases, like this:

cqmakedb -s .\myproject.db -c cscope.out -t tags -p


6. Open myproject.db using the CodeQuery GUI tool. Wild card search
   (* and ?) supported if Exact Match is switched off.
   Or use cqsearch, the CLI-version of CodeQuery (type `cqsearch -h`
   for more info).

Use cqmakedb -h to get help on cqmakedb command line arguments.




HOW TO USE CODEQUERY WITH JAVA CODE?


1. Change directory to the base folder of your source code like this:

cd c:\projects\myproject\src


2. Create a cscope.files file with all the Java source
   files listed in it.

dir /b/a/s *.java > cscope.files 


3. Create a cscope database like this:

cscope -cbR


4. Create a ctags database like this:

ctags --fields=+i -n -R -L cscope.files


5. Run cqmakedb to create a CodeQuery database out of the
   cscope and ctags databases, like this:

cqmakedb -s .\myproject.db -c cscope.out -t tags -p


6. Open myproject.db using the CodeQuery GUI tool. Wild card search
   (* and ?) supported if Exact Match is switched off.
   Or use cqsearch, the CLI-version of CodeQuery (type `cqsearch -h`
   for more info).

Use cqmakedb -h to get help on cqmakedb command line arguments.



HOW TO USE CODEQUERY WITH PYTHON CODE?


1. Change directory to the base folder of your source code like this:

cd c:\projects\myproject\src


2. Create a cscope.files file with all the Python source
   files listed in it.

dir /b/a/s *.py    > cscope.files  


3. Create a cscope database like this:

pycscope -i cscope.files


4. Create a ctags database like this.

ctags --fields=+i -n -R -L cscope.files


5. Run cqmakedb to create a CodeQuery database out of the
   cscope and ctags databases, like this:

cqmakedb -s .\myproject.db -c cscope.out -t tags -p


6. Open myproject.db using the CodeQuery GUI tool. Wild card search
   (* and ?) supported if Exact Match is switched off.
   Or use cqsearch, the CLI-version of CodeQuery (type `cqsearch -h`
   for more info).

Use cqmakedb -h to get help on cqmakedb command line arguments.




HOW TO USE CODEQUERY WITH RUBY AND GO CODE?


1. Change directory to the base folder of your source code like this:

cd c:\projects\myproject\src


2. Create a cscope.files file with all the Ruby or Go source
   files listed in it.

dir /b/a/s *.rb    > cscope.files  
dir /b/a/s *.go    > cscope.files 


3. Create a cscope database like this:

starscope -e cscope


4. Create a ctags database like this.

ctags --fields=+i -n -R -L cscope.files


5. Run cqmakedb to create a CodeQuery database out of the
   cscope and ctags databases, like this:

cqmakedb -s .\myproject.db -c cscope.out -t tags -p


6. Open myproject.db using the CodeQuery GUI tool. Wild card search
   (* and ?) supported if Exact Match is switched off.
   Or use cqsearch, the CLI-version of CodeQuery (type `cqsearch -h`
   for more info).

Use cqmakedb -h to get help on cqmakedb command line arguments.


